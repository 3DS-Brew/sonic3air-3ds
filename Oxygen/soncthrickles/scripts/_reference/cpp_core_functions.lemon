This file was auto-generated from the definitions in lemon script module 'OxygenCore'.


declare func s8 min(s8, s8)

declare func u8 min(u8, u8)

declare func s16 min(s16, s16)

declare func u16 min(u16, u16)

declare func s32 min(s32, s32)

declare func u32 min(u32, u32)

declare func s8 max(s8, s8)

declare func u8 max(u8, u8)

declare func s16 max(s16, s16)

declare func u16 max(u16, u16)

declare func s32 max(s32, s32)

declare func u32 max(u32, u32)

declare func s8 clamp(s8, s8, s8)

declare func u8 clamp(u8, u8, u8)

declare func s16 clamp(s16, s16, s16)

declare func u16 clamp(u16, u16, u16)

declare func s32 clamp(s32, s32, s32)

declare func u32 clamp(u32, u32, u32)

declare func u8 abs(s8)

declare func u16 abs(s16)

declare func u32 abs(s32)

declare func u32 sqrt(u32)

declare func s16 sin_s16(s16)

declare func s32 sin_s32(s32)

declare func s16 cos_s16(s16)

declare func s32 cos_s32(s32)

declare func u64 stringformat(u64, u64)

declare func u64 stringformat(u64, u64, u64)

declare func u64 stringformat(u64, u64, u64, u64)

declare func u64 stringformat(u64, u64, u64, u64, u64)

declare func u64 stringformat(u64, u64, u64, u64, u64, u64)

declare func u64 stringformat(u64, u64, u64, u64, u64, u64, u64)

declare func u64 stringformat(u64, u64, u64, u64, u64, u64, u64, u64)

declare func u64 stringformat(u64, u64, u64, u64, u64, u64, u64, u64, u64)

declare func u32 strlen(u64)

declare func u8 getchar(u64, u32)

declare func u64 substring(u64, u32, u32)

declare func void assert(u8, u64)

declare func void assert(u8)

declare func u8 _equal()

declare func u8 _negative()

declare func void _setZeroFlagByValue(u32)

declare func void _setNegativeFlagByValue(s8)

declare func void _setNegativeFlagByValue(s16)

declare func void _setNegativeFlagByValue(s32)

declare func void copyMemory(u32 destAddress, u32 sourceAddress, u32 bytes)

declare func void zeroMemory(u32 startAddress, u32 bytes)

declare func void fillMemory_u8(u32 startAddress, u32 bytes, u8 value)

declare func void fillMemory_u16(u32 startAddress, u32 bytes, u16 value)

declare func void fillMemory_u32(u32 startAddress, u32 bytes, u32 value)

declare func void push(u32)

declare func u32 pop()

declare func u16 get_status_register()

declare func void set_status_register(u16)

declare func u32 System.loadPersistentData(u32 targetAddress, u64 key, u32 bytes)

declare func void System.savePersistentData(u32 sourceAddress, u64 key, u32 bytes)

declare func u32 SRAM.load(u32 address, u16 offset, u16 bytes)

declare func void SRAM.save(u32 address, u16 offset, u16 bytes)

declare func void System.setupCallFrame(u64 functionName)

declare func void System.setupCallFrame(u64 functionName, u64 labelName)

declare func u32 System.rand()

declare func u32 System.getPlatformFlags()

declare func s8 System.hasPlatformFlag(u32 flag)

declare func s8 System.hasExternalRawData(u64 key)

declare func u32 System.loadExternalRawData(u64 key, u32 targetAddress, u32 offset, u32 maxBytes, s8 loadOriginalData, s8 loadModdedData)

declare func u32 System.loadExternalRawData(u64 key, u32 targetAddress)

declare func s8 System.hasExternalPaletteData(u64 key, u8 line)

declare func u16 System.loadExternalPaletteData(u64 key, u8 line, u32 targetAddress, u8 maxColors)

declare func u16 Input.getController(u8 controllerIndex)

declare func u16 Input.getControllerPrevious(u8 controllerIndex)

declare func u8 buttonDown(u8 index)

declare func u8 buttonPressed(u8 index)

declare func u8 Input.buttonDown(u8 index)

declare func u8 Input.buttonPressed(u8 index)

declare func void Input.setTouchInputMode(u8 index)

declare func void Input.setControllerLEDs(u8 playerIndex, u32 color)

declare func void yieldExecution()

declare func u16 getScreenWidth()

declare func u16 getScreenHeight()

declare func u16 getScreenExtend()

declare func void VDP.setupVRAMWrite(u16 vramAddress)

declare func void VDP.setupVSRAMWrite(u16 vsramAddress)

declare func void VDP.setupCRAMWrite(u16 cramAddress)

declare func void VDP.setWriteIncrement(u16 increment)

declare func u16 VDP.readData16()

declare func u32 VDP.readData32()

declare func void VDP.writeData16(u16 value)

declare func void VDP.writeData32(u32 value)

declare func void VDP.copyToVRAM(u32 address, u16 bytes)

declare func void VDP.fillVRAMbyDMA(u16 fillValue, u16 vramAddress, u16 bytes)

declare func void VDP.zeroVRAM(u16 bytes)

declare func void VDP.copyToVRAMbyDMA(u32 sourceAddress, u16 vramAddress, u16 bytes)

declare func void VDP.copyToCRAMbyDMA(u32 sourceAddress, u16 vramAddress, u16 bytes)

declare func void VDP.Config.setActiveDisplay(u8 enable)

declare func void VDP.Config.setNameTableBasePlaneB(u16 vramAddress)

declare func void VDP.Config.setNameTableBasePlaneA(u16 vramAddress)

declare func void VDP.Config.setNameTableBasePlaneW(u16 vramAddress)

declare func void VDP.Config.setBackdropColor(u8 paletteIndex)

declare func void VDP.Config.setVerticalScrolling(u8 verticalScrolling, u8 horizontalScrollMask)

declare func void VDP.Config.setRenderingModeConfiguration(u8 shadowHighlightPalette)

declare func void VDP.Config.setHorizontalScrollTableBase(u16 vramAddress)

declare func void VDP.Config.setPlayfieldSizeInPatterns(u16 width, u16 height)

declare func void VDP.Config.setPlayfieldSizeInPixels(u16 width, u16 height)

declare func void VDP.Config.setupWindowPlane(u8 useWindowPlane, u16 splitY)

declare func void VDP.Config.setPlaneWScrollOffset(u16 x, u8 y)

declare func void VDP.Config.setSpriteAttributeTableBase(u16 vramAddress)

declare func u16 getVRAM(u16 vramAddress)

declare func void setVRAM(u16 vramAddress, u16 value)

declare func void Renderer.setPaletteEntry(u8 index, u32 color)

declare func void Renderer.setPaletteEntryPacked(u8 index, u16 color)

declare func void Renderer.enableSecondaryPalette(u8 line)

declare func void Renderer.setSecondaryPaletteEntryPacked(u8 index, u16 color)

declare func void Renderer.setScrollOffsetH(u8 setIndex, u16 lineNumber, u16 value)

declare func void Renderer.setScrollOffsetV(u8 setIndex, u16 rowNumber, u16 value)

declare func void Renderer.setHorizontalScrollNoRepeat(u8 setIndex, u8 enable)

declare func void Renderer.setVerticalScrollOffsetBias(s16 bias)

declare func void Renderer.enforceClearScreen(u8 enabled)

declare func void Renderer.enableDefaultPlane(u8 planeIndex, u8 enabled)

declare func void Renderer.setupPlane(s16 px, s16 py, s16 width, s16 height, u8 planeIndex, u8 scrollOffsets, u16 renderQueue)

declare func void Renderer.resetCustomPlaneConfigurations()

declare func void Renderer.resetSprites()

declare func void Renderer.drawVdpSprite(s16 px, s16 py, u8 encodedSize, u16 patternIndex, u16 renderQueue)

declare func void Renderer.drawVdpSpriteWithAlpha(s16 px, s16 py, u8 encodedSize, u16 patternIndex, u16 renderQueue, u8 alpha)

declare func void Renderer.drawVdpSpriteTinted(s16 px, s16 py, u8 encodedSize, u16 patternIndex, u16 renderQueue, u32 tintColor, u32 addedColor)

declare func s8 Renderer.hasCustomSprite(u64 key)

declare func u64 Renderer.setupCustomUncompressedSprite(u32 sourceBase, u16 word, u32 mappingOffset, u8 animationSprite, u8 atex)

declare func u64 Renderer.setupCustomCharacterSprite(u32 sourceBase, u32 tableAddress, u32 mappingOffset, u8 animationSprite, u8 atex)

declare func u64 Renderer.setupCustomObjectSprite(u32 sourceBase, u32 tableAddress, u32 mappingOffset, u8 animationSprite, u8 atex)

declare func u64 Renderer.setupKosinskiCompressedSprite(u32 sourceBase, u32 mappingOffset, u8 animationSprite, u8 atex)

declare func u64 Renderer.setupKosinskiCompressedSprite(u32 sourceBase, u32 mappingOffset, u8 animationSprite, u8 atex, s16 indexOffset)

declare func void Renderer.drawCustomSprite(u64 key, s16 px, s16 py, u8 atex, u8 flags, u16 renderQueue)

declare func void Renderer.drawCustomSprite(u64 key, s16 px, s16 py, u8 atex, u8 flags, u16 renderQueue, u8 angle, u8 alpha)

declare func void Renderer.drawCustomSpriteTinted(u64 key, s16 px, s16 py, u8 atex, u8 flags, u16 renderQueue, u8 angle, u32 tintColor, s32 scale)

declare func void Renderer.drawCustomSpriteTransformed(u64 key, s16 px, s16 py, u8 atex, u8 flags, u16 renderQueue, u32 tintColor, s32 transform11, s32 transform12, s32 transform21, s32 transform22)

declare func void Renderer.extractCustomSprite(u64 key, u64 categoryName, u8 spriteNumber, u8 atex)

declare func void Renderer.addSpriteMask(s16 px, s16 py, s16 width, s16 height, u16 renderQueue, u8 priorityFlag)

declare func void Renderer.addSpriteMaskWorld(s16 px, s16 py, s16 width, s16 height, u16 renderQueue, u8 priorityFlag)

declare func void Renderer.setLogicalSpriteSpace(u8 space)

declare func void Renderer.clearSpriteTag()

declare func void Renderer.setSpriteTagWithPosition(u64 spriteTag, u16 px, u16 py)

declare func void Renderer.resetViewport(u16 renderQueue)

declare func void Renderer.setViewport(s16 px, s16 py, s16 width, s16 height, u16 renderQueue)

declare func void Renderer.setGlobalComponentTint(s16 tintR, s16 tintG, s16 tintB, s16 addedR, s16 addedG, s16 addedB)

declare func void setWorldSpaceOffset(s32, s32)

declare func void debugDrawRect(s32, s32, s32, s32)

declare func void debugDrawRect(s32, s32, s32, s32, u32)

declare func void Renderer.drawText(u64 fontKey, s32 px, s32 py, u64 text, u32 tintColor, u8 alignment, s8 spacing, u16 renderQueue, s8 useWorldSpace)

declare func s8 Audio.isPlayingAudio(u64 id)

declare func void Audio.playAudio(u64 sfxId, u8 contextId)

declare func void Audio.playAudio(u64 sfxId)

declare func void Audio.stopChannel(u8 channel)

declare func void Audio.fadeInChannel(u8 channel, u16 length)

declare func void Audio.fadeOutChannel(u8 channel, u16 length)

declare func void Audio.playOverride(u64 sfxId, u8 contextId, u8 channelId, u8 overriddenChannelId)

declare func void Audio.enableAudioModifier(u8 channel, u8 context, u64 postfix, u32 relativeSpeed)

declare func void Audio.disableAudioModifier(u8 channel, u8 context)

declare func u8 Mods.isModActive(u64)

declare func s32 Mods.getModPriority(u64)

declare func void debugLog(u64)

declare func void debugLogColors(u64, u32, u8)

declare func void debugWatch(u32, u16)

declare func void debugDumpToFile(u64, u32, u32)

declare func s8 ROMDataAnalyser.isEnabled()

declare func s8 ROMDataAnalyser.hasEntry(u64, u32)

declare func void ROMDataAnalyser.beginEntry(u64, u32)

declare func void ROMDataAnalyser.endEntry()

declare func void ROMDataAnalyser.addKeyValue(u64, u64)

declare func void ROMDataAnalyser.beginObject(u64)

declare func void ROMDataAnalyser.endObject()

declare func s8 System.SidePanel.setupCustomCategory(u64, u64)

declare func s8 System.SidePanel.addOption(u64, s8)

declare func void System.SidePanel.addEntry(u64)

declare func void System.SidePanel.addLine(u64, s8, u32)

declare func void System.SidePanel.addLine(u64, s8)

declare func s8 System.SidePanel.isEntryHovered(u64)

declare func void System.writeDisplayLine(u64)

declare func u32 Game.getSetting(u32)

declare func s8 Game.isSecretUnlocked(u32)

declare func void Game.triggerRestart()

declare func void Game.onGamePause(u8)

declare func void Game.allowRestartInGamePause(u8)

declare func void Game.onLevelStart()

declare func void Game.onZoneActCompleted(u16)

declare func u16 Game.onTriggerNextZone(u16)

declare func u16 Game.onFadedOutLoadingZone(u16)

declare func s8 Game.onCharacterDied(u8)

declare func void Game.onScreenFadedOutBeforeDataSelect()

declare func void Game.returnToMainMenu()

declare func s8 Game.isNormalGame()

declare func s8 Game.isTimeAttack()

declare func s8 Game.onTimeAttackFinish()

declare func void Game.changePlanePatternRectAtex(u16, u16, u16, u16, u8, u8)

declare func void Game.renderBlueSpheresGround(u16, u16, u8, u16, u16)

declare func u64 Game.getBlueSpheresGroundSprite(u8)

declare func void Game.writeBlueSpheresData(u32, u32, u16, u16, u8)

declare func s32 Game.getAchievementValue(u32)

declare func void Game.setAchievementValue(u32, s32)

declare func s8 Game.isAchievementComplete(u32)

declare func void Game.setAchievementComplete(u32)

declare func void Game.startSkippableCutscene()

declare func void Game.endSkippableCutscene()

declare func void Game.setDiscordDetails(u64)

declare func void Game.setDiscordState(u64)

declare func void Game.setDiscordLargeImage(u64)

declare func void Game.setDiscordSmallImage(u64)

declare func s8 Game.isModdedSound(u8)

declare func void Game.setUnderwaterAudioEffect(u8)

declare func void Kosinski.Decompress()

declare func void WriteScrollOffsets()

declare func void WriteScrollOffsetsFlipped()

declare func u32 putNybbles(u32, u16, u8)

declare func void uncompressKosinskiData(u32, u16)
